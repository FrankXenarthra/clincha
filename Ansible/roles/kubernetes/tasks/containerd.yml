---
- name: "Create modprobe config file"
  template:
    src: containerd.conf.j2
    dest: /etc/modules-load.d/containerd.conf
    owner: root
    group: root
    mode: 0755

- name: "Run modprobe commands"
  command: modprobe -v {{ item }}
  with_items: "{{ containerd_modprobe_modules }}"
  register: modprobe_output
  changed_when: "'insmod' in modprobe_output.stdout"

- name: "Add sysctl parameters"
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value}} "
    state: "{{ item.state }}"
  with_items: "{{ containerd_sysctl_parameters }}"

- name: "Install the dnf plugin manager"
  dnf:
    name: dnf-plugins-core
    state: latest
    update_cache: yes

- name: "Add the docker dnf repository"
  dnf:
    enablerepo: "https://download.docker.com/linux/fedora/docker-ce.repo"

- name: "Install docker and containerd"
  dnf:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-compose-plugin
    - iproute-tc

- name: "Configure docker to use systemd as cgroup driver"
  copy:
    dest: /etc/docker/daemon.json
    src: daemon.json
    owner: root
    group: root
    mode: 0660
  register: docker_cgroup_output

- name: "Restart docker"
  when: docker_cgroup_output.changed
  systemd:
    name: docker
    state: restarted

- name: "Block - Start docker"
  block:
    - name: "Start docker"
      systemd:
        name: docker
        state: started
        enabled: yes
  rescue:
    - name: "Wait for docker to be ready to start"
      wait_for:
        timeout: 30
      delegate_to: localhost

    - name: "Start docker again"
      systemd:
        name: docker
        state: started
        enabled: yes

- name: "Use containerd as the container runtime"
  copy:
    dest: /etc/crictl.yaml
    src: crictl.yaml
    owner: root
    group: root
    mode: 0660