---
- name: Add flannel chart repository
  when: "'kubernetes_master' in group_names"
  become: true
  become_user: kubernetes
  kubernetes.core.helm_repository:
    name: "flannel"
    repo_url: "{{ flannel_helm_repository_url }}"

- name: Install flannel
  when: "'kubernetes_master' in group_names"
  become: true
  become_user: kubernetes
  register: flannel_install
  until: flannel_install.failed is false
  retries: 12
  delay: 10
  kubernetes.core.helm:
    name: flannel
    chart_ref: flannel/flannel
    release_namespace: "{{ flannel_namespace }}"
    create_namespace: true
    values:
      podCidr: "{{ pod_network_cidr }}"

- name: Add label to namespace
  when: "'kubernetes_master' in group_names"
  become: true
  become_user: kubernetes
  register: flannel_namespace
  until: flannel_namespace.failed is false
  retries: 12
  delay: 10
  kubernetes.core.k8s:
    state: patched
    kind: Namespace
    name: "{{ flannel_namespace }}"
    definition:
      metadata:
        labels:
          "pod-security.kubernetes.io/enforce": "privileged"

- name: "Set the flannel install fact on kubernetes workers"
  set_fact:
    flannel_installed: true
  when: flannel_install.changed is true
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['kubernetes_worker'] }}"

- debug:
    msg: "flannel_installed|default('false')"

- name: Configure network after install
  when: "flannel_installed|default('false')"
  block:
    # https://github.com/clincha/clincha/issues/107
    - name: "Reset the Kubernetes network bridges"
      block:
        - name: "Down the connections"
          command:
            cmd: "ip link set {{ item }} down"
          loop:
            - "cni0"
            - "flannel.1"
          failed_when: false

        - name: "Delete the connections"
          command:
            cmd: "ip link delete {{ item }}"
          loop:
            - "cni0"
            - "flannel.1"
          failed_when: false

        - name: "Restart the kubernetes services"
          service:
            state: restarted
            name: "{{ item }}"
          loop:
            - "podman"
            - "kubelet"

    - name: "restart coredns pods"
      when: "'kubernetes_master' in group_names and flannel_install.changed"
      become: true
      become_user: kubernetes
      command:
        cmd: "kubectl delete pod -n kube-system -l k8s-app=kube-dns"
      changed_when: true

- name: "Wait for flannel pods to be ready"
  when: "'kubernetes_master' in group_names and flannel_wait_for_pods_to_be_ready"
  become: true
  become_user: kubernetes
  register: flannel_wait
  until: flannel_wait.failed is false
  retries: 12
  delay: 10
  command: "kubectl wait --for=condition=Ready pods --all -n {{ flannel_namespace }} --timeout=10m"
  changed_when: false
