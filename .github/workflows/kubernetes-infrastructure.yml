name: kubernetes-infrastructure

on:
  workflow_dispatch:
#  push:

jobs:
  apply-infrastructure:
    runs-on: [self-hosted]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Create storage infrastructure
        working-directory: kubernetes/storage
        env:
          KUBE_CONFIG_BASE64: ${{ secrets.KUBE_CONFIG }}
          CEPH_KUBERNETES_PASSWORD: ${{ secrets.CEPH_KUBERNETES_PASSWORD }}
        run: |
          echo "$KUBE_CONFIG_BASE64" | base64 --decode > kube_config
          export KUBECONFIG=$(pwd)/kube_config
          kubectl apply -f ceph-config-map.yml
          kubectl apply -f csi-config-map.yml
          kubectl apply -f csi-kms-config-map.yml
          kubectl create secret generic ceph-kubernetes-user --from-literal=userID=kubernetes --from-literal=key2=$(echo "$CEPH_KUBERNETES_PASSWORD")
          kubectl apply -f https://raw.githubusercontent.com/ceph/ceph-csi/master/deploy/rbd/kubernetes/csi-provisioner-rbac.yaml
          kubectl apply -f https://raw.githubusercontent.com/ceph/ceph-csi/master/deploy/rbd/kubernetes/csi-nodeplugin-rbac.yaml
          kubectl apply -f https://raw.githubusercontent.com/ceph/ceph-csi/master/deploy/rbd/kubernetes/csi-rbdplugin-provisioner.yaml
          kubectl apply -f https://raw.githubusercontent.com/ceph/ceph-csi/master/deploy/rbd/kubernetes/csi-rbdplugin.yaml
          kubectl apply -f csi-rdb-sc.yml

      - name: Cleanup job
        run: |
          echo "Cleaning up resources"
          rm -rf kube_config
        if: always()
